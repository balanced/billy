{
    "errors": {
        "400_PAYOUT_INTERVAL": {
            "status": 400,
            "error_message": "Invalid payout_interval. Please check.",
            "error_code": "400_PAYOUT_INTERVAL"
        },
        "400_QUANTITY": {
            "status": 400,
            "error_message": "Invalid quantity. Please check.",
            "error_code": "400_QUANTITY"
        },
        "409_PLAN_ALREADY_EXISTS": {
            "status": 409,
            "error_message": "Cannot perform POST on an existing plan. Use PUT instead.",
            "error_code": "409_PLAN_ALREADY_EXISTS"
        },
        "400_PERCENT_OFF_INT": {
            "status": 400,
            "error_message": "Invalid percent_off_int. Please check.",
            "error_code": "400_PERCENT_OFF_INT"
        },
        "400_EXPIRE_AT": {
            "status": 400,
            "error_message": "Invalid expire_at. Please check.",
            "error_code": "400_EXPIRE_AT"
        },
        "409_CUSTOMER_ALREADY_EXISTS": {
            "status": 409,
            "error_message": "Cannot perform POST on an existing customer. Use PUT instead.",
            "error_code": "409_CUSTOMER_ALREADY_EXISTS"
        },
        "400_PAYOUT_ID": {
            "status": 400,
            "error_message": "Invalid coupon_id. Please check.",
            "error_code": "400_PAYOUT_ID"
        },
        "400_CUSTOMER_ID": {
            "status": 400,
            "error_message": "Invalid customer_id. Please check.",
            "error_code": "400_CUSTOMER_ID"
        },
        "409_COUPON_ALREADY_EXISTS": {
            "status": 409,
            "error_message": "Cannot perform POST on an existing coupon. Use PUT instead.",
            "error_code": "409_COUPON_ALREADY_EXISTS"
        },
        "404_PAYOUT_SUB_NOT_FOUND": {
            "status": 404,
            "error_message": "The payout subscription you requested was not found.",
            "error_code": "404_PAYOUT_SUB_NOT_FOUND"
        },
        "400_COUPON_ID": {
            "status": 400,
            "error_message": "Invalid coupon_id. Please check.",
            "error_code": "400_COUPON_ID"
        },
        "404_PAYOUT_TRANS_NOT_FOUND": {
            "status": 404,
            "error_message": "The payout transaction you requested was not found.",
            "error_code": "404_PAYOUT_TRANS_NOT_FOUND"
        },
        "404_PLAN_TRANS_NOT_FOUND": {
            "status": 404,
            "error_message": "The plan transaction you requested was not found.",
            "error_code": "404_PLAN_TRANS_NOT_FOUND"
        },
        "409_PAYOUT_ALREADY_EXISTS": {
            "status": 409,
            "error_message": "Cannot perform POST on an existing payout. Use PUT instead.",
            "error_code": "409_PAYOUT_ALREADY_EXISTS"
        },
        "400_PRICE_CENTS": {
            "status": 400,
            "error_message": "Invalid price_cents. Please check.",
            "error_code": "400_PRICE_CENTS"
        },
        "404_PAYOUT_INV_NOT_FOUND": {
            "status": 404,
            "error_message": "The payout invoice you requested was not found.",
            "error_code": "404_PAYOUT_INV_NOT_FOUND"
        },
        "404_PLAN_NOT_FOUND": {
            "status": 404,
            "error_message": "The plan you requested was not found.",
            "error_code": "404_PLAN_NOT_FOUND"
        },
        "400_BALANCE_TO_KEEP_CENTS": {
            "status": 400,
            "error_message": "Invalid balance_to_keep_cents. Please check.",
            "error_code": "400_BALANCE_TO_KEEP_CENTS"
        },
        "400_NAME": {
            "status": 400,
            "error_message": "Invalid name. Please check.",
            "error_code": "400_NAME"
        },
        "404_PAYOUT_NOT_FOUND": {
            "status": 404,
            "error_message": "The payout you requested was not found.",
            "error_code": "404_PAYOUT_NOT_FOUND"
        },
        "400_PRICE_OFF_CENTS": {
            "status": 400,
            "error_message": "Invalid price_off_cents. Please check.",
            "error_code": "400_PRICE_OFF_CENTS"
        },
        "404_PLAN_SUB_NOT_FOUND": {
            "status": 404,
            "error_message": "The plan subscription you requested was not found.",
            "error_code": "404_PLAN_SUB_NOT_FOUND"
        },
        "404_PLAN_INV_NOT_FOUND": {
            "status": 404,
            "error_message": "The plan invoice you requested was not found.",
            "error_code": "404_PLAN_INV_NOT_FOUND"
        },
        "400_PLAN_INTERVAL": {
            "status": 400,
            "error_message": "Invalid plan_interval. Please check.",
            "error_code": "400_PLAN_INTERVAL"
        },
        "409_COUPON_MAX_REDEEM": {
            "status": 409,
            "error_message": "The coupon has already been redeemed maximum times",
            "error_code": "409_COUPON_MAX_REDEEM"
        },
        "404_CUSTOMER_NOT_FOUND": {
            "status": 404,
            "error_message": "The customer you requested was not found.",
            "error_code": "404_CUSTOMER_NOT_FOUND"
        },
        "400_REPEATING": {
            "status": 400,
            "error_message": "Invalid repeating. Please check.",
            "error_code": "400_REPEATING"
        },
        "400_MAX_REDEEM": {
            "status": 400,
            "error_message": "Invalid max_redeem. Please check.",
            "error_code": "400_MAX_REDEEM"
        },
        "401": {
            "status": 401,
            "error_message": "UnAuthorized: Invalid API Key",
            "error_code": "401"
        },
        "400": {
            "status": 400,
            "error_message": "Please check your request parameters.",
            "error_code": "400"
        },
        "400_PLAN_ID": {
            "status": 400,
            "error_message": "Invalid coupon_id. Please check.",
            "error_code": "400_PLAN_ID"
        },
        "404_COUPON_NOT_FOUND": {
            "status": 404,
            "error_message": "The coupon you requested was not found.",
            "error_code": "404_COUPON_NOT_FOUND"
        },
        "400_TRIAL_INTERVAL": {
            "status": 400,
            "error_message": "Invalid trial_interval. Please check.",
            "error_code": "400_TRIAL_INTERVAL"
        }
    },
    "resources": {
        "customer": {
            "methods": {
                "PUT": {
                    "description": "Update a customer, currently limited to updating their coupon.",
                    "form_fields": [
                        {
                            "type": "STRING",
                            "name": "coupon_id"
                        }
                    ]
                },
                "GET": {
                    "description": "Retrieve a single customer"
                }
            },
            "description": "Methods pertaining to a single customer",
            "path": "/customer/<string:customer_id>/",
            "view": {
                "balanced_id": {
                    "type": "STRING"
                },
                "created_at": {
                    "type": "DATETIME"
                },
                "charge_attempts": {
                    "type": "INTEGER"
                },
                "id": {
                    "type": "STRING"
                },
                "last_debt_clear": {
                    "type": "DATETIME"
                },
                "current_coupon": {
                    "type": "STRING"
                }
            }
        },
        "payout": {
            "methods": {
                "PUT": {
                    "description": "Update the name of a payout",
                    "form_fields": [
                        {
                            "type": "STRING",
                            "name": "name"
                        }
                    ]
                },
                "DELETE": {
                    "description": "Deletes a payout by marking it inactive. Does not effect users already\n        on the payout."
                },
                "GET": {
                    "description": "Retrieve a single payout"
                }
            },
            "description": "Methods pertaining to a single payout",
            "path": "/payout/<string:payout_id>/",
            "view": {
                "name": {
                    "type": "STRING"
                },
                "created_at": {
                    "type": "DATETIME"
                },
                "payout_interval": {
                    "type": "INTERVAL"
                },
                "balance_to_keep_cents": {
                    "type": "INTEGER"
                },
                "active": {
                    "type": "BOOLEAN"
                },
                "id": {
                    "type": "STRING"
                }
            }
        },
        "payout_index": {
            "methods": {
                "POST": {
                    "description": "Create a payout",
                    "form_fields": [
                        {
                            "type": "INTEGER",
                            "name": "balance_to_keep_cents"
                        },
                        {
                            "type": "STRING",
                            "name": "payout_interval"
                        },
                        {
                            "type": "STRING",
                            "name": "name"
                        },
                        {
                            "type": "STRING",
                            "name": "payout_id"
                        }
                    ]
                },
                "GET": {
                    "description": "Return a list of payouts pertaining to a group"
                }
            },
            "description": "Base PayoutPlan resource used to create a payout or retrieve all your payouts",
            "path": "/payout/",
            "view": {
                "name": {
                    "type": "STRING"
                },
                "created_at": {
                    "type": "DATETIME"
                },
                "payout_interval": {
                    "type": "INTERVAL"
                },
                "balance_to_keep_cents": {
                    "type": "INTEGER"
                },
                "active": {
                    "type": "BOOLEAN"
                },
                "id": {
                    "type": "STRING"
                }
            }
        },
        "group": {
            "path": "/auth/",
            "description": "Base authentication route that converts an API key to a group",
            "methods": {
                "GET": {
                    "description": "Used to test api_key and authentication"
                }
            },
            "view": null
        },
        "customers_index": {
            "methods": {
                "POST": {
                    "description": "Create a customer",
                    "form_fields": [
                        {
                            "type": "STRING",
                            "name": "balanced_id"
                        },
                        {
                            "type": "STRING",
                            "name": "customer_id"
                        }
                    ]
                },
                "GET": {
                    "description": "Return a list of customers pertaining to a group"
                }
            },
            "description": "Base customer resource used to create a customer or retrieve all your customers",
            "path": "/customer/",
            "view": {
                "balanced_id": {
                    "type": "STRING"
                },
                "created_at": {
                    "type": "DATETIME"
                },
                "charge_attempts": {
                    "type": "INTEGER"
                },
                "id": {
                    "type": "STRING"
                },
                "last_debt_clear": {
                    "type": "DATETIME"
                },
                "current_coupon": {
                    "type": "STRING"
                }
            }
        },
        "coupon": {
            "methods": {
                "PUT": {
                    "description": "Update a customer, currently limited to updating their coupon.",
                    "form_fields": [
                        {
                            "type": "INTEGER",
                            "name": "repeating"
                        },
                        {
                            "type": "STRING",
                            "name": "name"
                        },
                        {
                            "type": "DATETIME",
                            "name": "expire_at"
                        },
                        {
                            "type": "INTEGER",
                            "name": "max_redeem"
                        }
                    ]
                },
                "DELETE": {
                    "description": "Deletes a coupon by marking it inactive. Does not effect users already\n        on the coupon."
                },
                "GET": {
                    "description": "Retrieve a single coupon"
                }
            },
            "description": "Methods pertaining to a single coupon",
            "path": "/coupon/<string:coupon_id>/",
            "view": {
                "name": {
                    "type": "STRING"
                },
                "price_off_cents": {
                    "type": "INTEGER"
                },
                "max_redeem": {
                    "type": "INTEGER"
                },
                "created_at": {
                    "type": "DATETIME"
                },
                "coupon_id": {
                    "type": "STRING"
                },
                "active": {
                    "type": "BOOLEAN"
                },
                "repeating": {
                    "type": "INTEGER"
                },
                "percent_off_int": {
                    "type": "INTEGER"
                },
                "expire_at": {
                    "type": "DATETIME"
                }
            }
        },
        "plan_subscription_index": {
            "methods": {
                "POST": {
                    "description": "Create or update a plan subscription",
                    "form_fields": [
                        {
                            "type": "DATETIME",
                            "name": "start_dt"
                        },
                        {
                            "type": "BOOLEAN",
                            "name": "charge_at_period_end"
                        },
                        {
                            "type": "STRING",
                            "name": "customer_id"
                        },
                        {
                            "type": "STRING",
                            "name": "plan_id"
                        },
                        {
                            "type": "INTEGER",
                            "name": "quantity"
                        }
                    ]
                },
                "DELETE": {
                    "description": "Unsubscribe from the plan",
                    "form_fields": [
                        {
                            "type": "BOOLEAN",
                            "name": "cancel_at_period_end"
                        },
                        {
                            "type": "STRING",
                            "name": "customer_id"
                        },
                        {
                            "type": "STRING",
                            "name": "plan_id"
                        }
                    ]
                },
                "GET": {
                    "description": "Return a list of plans subscriptions pertaining to a group"
                }
            },
            "description": "Base ChargeSubscription resource used to create a plan subscription or retrieve all your plan subscriptions",
            "path": "/plan_subscription/",
            "view": {
                "plan_id": {
                    "type": "STRING"
                },
                "created_at": {
                    "type": "DATETIME"
                },
                "is_active": {
                    "type": "BOOLEAN"
                },
                "is_enrolled": {
                    "type": "BOOLEAN"
                },
                "customer_id": {
                    "type": "STRING"
                },
                "id": {
                    "type": "STRING"
                }
            }
        },
        "payout_subscription": {
            "path": "/payout_subscription/<string:payout_sub_id>/",
            "view": {
                "created_at": {
                    "type": "DATETIME"
                },
                "customer_id": {
                    "type": "STRING"
                },
                "is_active": {
                    "type": "BOOLEAN"
                },
                "id": {
                    "type": "STRING"
                },
                "payout_id": {
                    "type": "STRING"
                }
            },
            "description": "Methods pertaining to a single payout subscription",
            "methods": {
                "GET": {
                    "description": "Retrieve a single subscription"
                }
            }
        },
        "plan_subscription": {
            "path": "/plan_subscription/<string:plan_sub_id>/",
            "view": {
                "plan_id": {
                    "type": "STRING"
                },
                "created_at": {
                    "type": "DATETIME"
                },
                "is_active": {
                    "type": "BOOLEAN"
                },
                "is_enrolled": {
                    "type": "BOOLEAN"
                },
                "customer_id": {
                    "type": "STRING"
                },
                "id": {
                    "type": "STRING"
                }
            },
            "description": "Methods pertaining to a single plan subscription",
            "methods": {
                "GET": {
                    "description": "Retrieve a single subscription"
                }
            }
        },
        "payout_invoice_index": {
            "path": "/payout_invoice/",
            "view": {
                "payout_id": {
                    "type": "STRING"
                },
                "created_at": {
                    "type": "DATETIME"
                },
                "amount_paid_out": {
                    "type": "INTEGER"
                },
                "payout_dt": {
                    "type": "DATETIME"
                },
                "attempts_made": {
                    "type": "INTEGER"
                },
                "cleared_by_txn": {
                    "type": "STRING"
                },
                "subscription_id": {
                    "type": "STRING"
                },
                "customer_id": {
                    "type": "STRING"
                },
                "id": {
                    "type": "STRING"
                },
                "balance_at_exec": {
                    "type": "INTEGER"
                }
            },
            "description": "Base PayoutInvoice resource used to create a payout invoice or retrieve all your payout invoices",
            "methods": {
                "GET": {
                    "description": "Return a list of payout invoices pertaining to a group"
                }
            }
        },
        "payout_transaction": {
            "path": "/payout_transaction/<string:payout_trans_id>/",
            "view": {
                "status": {
                    "type": "STRING"
                },
                "customer_id": {
                    "type": "STRING"
                },
                "amount_cents": {
                    "type": "INTEGER"
                },
                "invoices": {
                    "type": "STRING"
                },
                "created_at": {
                    "type": "DATETIME"
                },
                "provider_txn_id": {
                    "type": "STRING"
                },
                "id": {
                    "type": "STRING"
                }
            },
            "description": "Methods pertaining to a single payout transaction",
            "methods": {
                "GET": {
                    "description": "Retrieve a single transaction"
                }
            }
        },
        "plan_transaction_index": {
            "path": "/plan_transaction/",
            "view": {
                "status": {
                    "type": "STRING"
                },
                "customer_id": {
                    "type": "STRING"
                },
                "amount_cents": {
                    "type": "INTEGER"
                },
                "invoices": {
                    "type": "STRING"
                },
                "created_at": {
                    "type": "DATETIME"
                },
                "provider_txn_id": {
                    "type": "STRING"
                },
                "id": {
                    "type": "STRING"
                }
            },
            "description": "Base ChargePlan Transaction resource used to create a plan transaction or retrieve all your plan transactions",
            "methods": {
                "GET": {
                    "description": "Return a list of plan transactions pertaining to a group"
                }
            }
        },
        "plan_transaction": {
            "path": "/plan_transaction/<string:plan_trans_id>/",
            "view": {
                "status": {
                    "type": "STRING"
                },
                "customer_id": {
                    "type": "STRING"
                },
                "amount_cents": {
                    "type": "INTEGER"
                },
                "invoices": {
                    "type": "STRING"
                },
                "created_at": {
                    "type": "DATETIME"
                },
                "provider_txn_id": {
                    "type": "STRING"
                },
                "id": {
                    "type": "STRING"
                }
            },
            "description": "Methods pertaining to a single plan transaction",
            "methods": {
                "GET": {
                    "description": "Retrieve a single transaction"
                }
            }
        },
        "plan": {
            "methods": {
                "PUT": {
                    "description": "Update the name of a plan",
                    "form_fields": [
                        {
                            "type": "STRING",
                            "name": "name"
                        }
                    ]
                },
                "DELETE": {
                    "description": "Deletes a plan by marking it inactive. Does not effect users already\n        on the plan."
                },
                "GET": {
                    "description": "Retrieve a single plan"
                }
            },
            "description": "Methods pertaining to a single plan",
            "path": "/plan/<string:plan_id>/",
            "view": {
                "price_cents": {
                    "type": "INTEGER"
                },
                "name": {
                    "type": "STRING"
                },
                "created_at": {
                    "type": "DATETIME"
                },
                "id": {
                    "type": "STRING"
                },
                "trial_interval": {
                    "type": "INTERVAL"
                },
                "active": {
                    "type": "BOOLEAN"
                },
                "plan_interval": {
                    "type": "INTERVAL"
                }
            }
        },
        "plan_invoice_index": {
            "path": "/plan_invoice/",
            "view": {
                "amount_base_cents": {
                    "type": "INTEGER"
                },
                "customer_id": {
                    "type": "STRING"
                },
                "start_dt": {
                    "type": "DATETIME"
                },
                "plan_id": {
                    "type": "STRING"
                },
                "amount_after_coupon_cents": {
                    "type": "INTEGER"
                },
                "created_at": {
                    "type": "DATETIME"
                },
                "prorated": {
                    "type": "BOOLEAN"
                },
                "subscription_id": {
                    "type": "STRING"
                },
                "includes_trial": {
                    "type": "BOOLEAN"
                },
                "id": {
                    "type": "STRING"
                },
                "original_end_dt": {
                    "type": "DATETIME"
                },
                "amount_paid_cents": {
                    "type": "INTEGER"
                },
                "cleared_by_txn": {
                    "type": "STRING"
                },
                "charge_at_period_end": {
                    "type": "BOOLEAN"
                },
                "relevant_coupon": {
                    "type": "STRING"
                },
                "end_dt": {
                    "type": "DATETIME"
                },
                "remaining_balance_cents": {
                    "type": "INTEGER"
                },
                "quantity": {
                    "type": "INTEGER"
                }
            },
            "description": "Base ChargePlanInvoice resource used to create a plan invoice or retrieve all your plan invoices",
            "methods": {
                "GET": {
                    "description": "Return a list of plans invoices pertaining to a group"
                }
            }
        },
        "plan_invoice": {
            "path": "/plan_invoice/<string:plan_inv_id>/",
            "view": {
                "amount_base_cents": {
                    "type": "INTEGER"
                },
                "customer_id": {
                    "type": "STRING"
                },
                "start_dt": {
                    "type": "DATETIME"
                },
                "plan_id": {
                    "type": "STRING"
                },
                "amount_after_coupon_cents": {
                    "type": "INTEGER"
                },
                "created_at": {
                    "type": "DATETIME"
                },
                "prorated": {
                    "type": "BOOLEAN"
                },
                "subscription_id": {
                    "type": "STRING"
                },
                "includes_trial": {
                    "type": "BOOLEAN"
                },
                "id": {
                    "type": "STRING"
                },
                "original_end_dt": {
                    "type": "DATETIME"
                },
                "amount_paid_cents": {
                    "type": "INTEGER"
                },
                "cleared_by_txn": {
                    "type": "STRING"
                },
                "charge_at_period_end": {
                    "type": "BOOLEAN"
                },
                "relevant_coupon": {
                    "type": "STRING"
                },
                "end_dt": {
                    "type": "DATETIME"
                },
                "remaining_balance_cents": {
                    "type": "INTEGER"
                },
                "quantity": {
                    "type": "INTEGER"
                }
            },
            "description": "Methods pertaining to a single plan invoice",
            "methods": {
                "GET": {
                    "description": "Retrieve a single invoice"
                }
            }
        },
        "plan_index": {
            "methods": {
                "POST": {
                    "description": "Create a plan",
                    "form_fields": [
                        {
                            "type": "INTEGER",
                            "name": "price_cents"
                        },
                        {
                            "type": "STRING",
                            "name": "plan_interval"
                        },
                        {
                            "type": "STRING",
                            "name": "plan_id"
                        },
                        {
                            "type": "STRING",
                            "name": "name"
                        },
                        {
                            "type": "STRING",
                            "name": "trial_interval"
                        }
                    ]
                },
                "GET": {
                    "description": "Return a list of plans pertaining to a group"
                }
            },
            "description": "Base ChargePlan resource used to create a plan or retrieve all your plans",
            "path": "/plan/",
            "view": {
                "price_cents": {
                    "type": "INTEGER"
                },
                "name": {
                    "type": "STRING"
                },
                "created_at": {
                    "type": "DATETIME"
                },
                "id": {
                    "type": "STRING"
                },
                "trial_interval": {
                    "type": "INTERVAL"
                },
                "active": {
                    "type": "BOOLEAN"
                },
                "plan_interval": {
                    "type": "INTERVAL"
                }
            }
        },
        "coupon_index": {
            "methods": {
                "POST": {
                    "description": "Create a coupon",
                    "form_fields": [
                        {
                            "type": "STRING",
                            "name": "name"
                        },
                        {
                            "type": "INTEGER",
                            "name": "price_off_cents"
                        },
                        {
                            "type": "INTEGER",
                            "name": "max_redeem"
                        },
                        {
                            "type": "STRING",
                            "name": "coupon_id"
                        },
                        {
                            "type": "INTEGER",
                            "name": "repeating"
                        },
                        {
                            "type": "INTEGER",
                            "name": "percent_off_int"
                        },
                        {
                            "type": "DATETIME",
                            "name": "expire_at"
                        }
                    ]
                },
                "GET": {
                    "description": "Return a list of coupon pertaining to a group"
                }
            },
            "description": "Base coupon resource used to create a coupon or retrieve all your coupons",
            "path": "/coupon/",
            "view": {
                "name": {
                    "type": "STRING"
                },
                "price_off_cents": {
                    "type": "INTEGER"
                },
                "max_redeem": {
                    "type": "INTEGER"
                },
                "created_at": {
                    "type": "DATETIME"
                },
                "coupon_id": {
                    "type": "STRING"
                },
                "active": {
                    "type": "BOOLEAN"
                },
                "repeating": {
                    "type": "INTEGER"
                },
                "percent_off_int": {
                    "type": "INTEGER"
                },
                "expire_at": {
                    "type": "DATETIME"
                }
            }
        },
        "payout_invoice": {
            "path": "/payout_invoice/<string:payout_inv_id>/",
            "view": {
                "payout_id": {
                    "type": "STRING"
                },
                "created_at": {
                    "type": "DATETIME"
                },
                "amount_paid_out": {
                    "type": "INTEGER"
                },
                "payout_dt": {
                    "type": "DATETIME"
                },
                "attempts_made": {
                    "type": "INTEGER"
                },
                "cleared_by_txn": {
                    "type": "STRING"
                },
                "subscription_id": {
                    "type": "STRING"
                },
                "customer_id": {
                    "type": "STRING"
                },
                "id": {
                    "type": "STRING"
                },
                "balance_at_exec": {
                    "type": "INTEGER"
                }
            },
            "description": "Methods pertaining to a single payout invoice",
            "methods": {
                "GET": {
                    "description": "Retrieve a single invoice"
                }
            }
        },
        "payout_transaction_index": {
            "path": "/payout_transaction/",
            "view": {
                "status": {
                    "type": "STRING"
                },
                "customer_id": {
                    "type": "STRING"
                },
                "amount_cents": {
                    "type": "INTEGER"
                },
                "invoices": {
                    "type": "STRING"
                },
                "created_at": {
                    "type": "DATETIME"
                },
                "provider_txn_id": {
                    "type": "STRING"
                },
                "id": {
                    "type": "STRING"
                }
            },
            "description": "Base PayoutPlan Transaction resource used to create a payout transaction or retrieve all your payout transactions",
            "methods": {
                "GET": {
                    "description": "Return a list of payout transactions pertaining to a group"
                }
            }
        },
        "payout_subscription_index": {
            "methods": {
                "POST": {
                    "description": "Create or update a payout subscription",
                    "form_fields": [
                        {
                            "type": "DATETIME",
                            "name": "start_dt"
                        },
                        {
                            "type": "STRING",
                            "name": "customer_id"
                        },
                        {
                            "type": "BOOLEAN",
                            "name": "first_now"
                        },
                        {
                            "type": "STRING",
                            "name": "payout_id"
                        }
                    ]
                },
                "DELETE": {
                    "description": "Unsubscribe from the payout",
                    "form_fields": [
                        {
                            "type": "BOOLEAN",
                            "name": "cancel_at_period_end"
                        },
                        {
                            "type": "STRING",
                            "name": "customer_id"
                        },
                        {
                            "type": "STRING",
                            "name": "plan_id"
                        }
                    ]
                },
                "GET": {
                    "description": "Return a list of payout subscriptions pertaining to a group"
                }
            },
            "description": "Base PayoutSubscription resource used to create a payout subscription or retrieve all your payout subscriptions",
            "path": "/payout_subscription/",
            "view": {
                "created_at": {
                    "type": "DATETIME"
                },
                "customer_id": {
                    "type": "STRING"
                },
                "is_active": {
                    "type": "BOOLEAN"
                },
                "id": {
                    "type": "STRING"
                },
                "payout_id": {
                    "type": "STRING"
                }
            }
        }
    }
}